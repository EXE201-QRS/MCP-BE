generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique @db.VarChar(500)
  name        String? @db.VarChar(500)
  password    String  @db.VarChar(500)
  roleName    Role    @default(CUSTOMER)
  phoneNumber String? @db.VarChar(50)
  avatar      String? @db.VarChar(1000)

  createdServicePlans ServicePlan[] @relation("ServicePlanCreatedBy")
  updatedServicePlans ServicePlan[] @relation("ServicePlanUpdatedBy")
  deletedServicePlans ServicePlan[] @relation("ServicePlanDeletedBy")

  createdById  Int?
  createdBy    User?  @relation("CreatorUsers", fields: [createdById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  createdUsers User[] @relation("CreatorUsers")

  updatedById  Int?
  updatedBy    User?  @relation("UpdatorUsers", fields: [updatedById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  updatedUsers User[] @relation("UpdatorUsers")
  deletedById  Int?
  deletedBy    User?  @relation("DeletorUsers", fields: [deletedById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  deletedUsers User[] @relation("DeletorUsers")

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([deletedAt])
}

model VerificationCode {
  id    Int                  @id @default(autoincrement())
  email String               @db.VarChar(500)
  code  String               @db.VarChar(50)
  type  VerificationCodeType

  expiresAt DateTime
  createdAt DateTime @default(now())

  @@unique([email, code, type])
  @@index([expiresAt])
}

model ServicePlan {
  id          Int     @id @default(autoincrement())
  name        String  @unique // Basic, Professional, Enterprise
  description String? // Mô tả ngắn: "Phù hợp cho nhà hàng nhỏ", etc.
  price       Float   @default(0.0) // VND/tháng

  createdById Int?
  createdBy   User? @relation("ServicePlanCreatedBy", fields: [createdById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  updatedById Int?
  updatedBy   User? @relation("ServicePlanUpdatedBy", fields: [updatedById], references: [id], onDelete: SetNull, onUpdate: NoAction)
  deletedById Int?
  deletedBy   User? @relation("ServicePlanDeletedBy", fields: [deletedById], references: [id], onDelete: SetNull, onUpdate: NoAction)

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([name])
  @@index([deletedAt])
}

enum Role {
  ADMIN_SYSTEM
  CUSTOMER
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_VERIFICATION
}

enum VerificationCodeType {
  REGISTER
  FORGOT_PASSWORD
}

enum SubscriptionStatus {
  ACTIVE
  EXPIRED
  CANCELLED
  SUSPENDED
}
